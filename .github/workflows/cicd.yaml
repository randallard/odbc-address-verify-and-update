name: Build and Update staging

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'deployment/stg/**'

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for GitVersion

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
          useConfigFile: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.gitversion.outputs.semVer }}
            type=raw,value=${{ steps.gitversion.outputs.majorMinorPatch }}
            type=raw,value=${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.version=${{ steps.gitversion.outputs.semVer }}
            org.opencontainers.image.revision=${{ github.sha }}
            ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Checkout staging config
        uses: actions/checkout@v4
        with:
          ref: main
          path: deployment

      - name: Update Kustomization
        run: |
          cd deployment/stg
          NEW_IMAGE="${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.gitversion.outputs.semVer }}"
          yq eval ".images[0].newTag = \"${{ steps.gitversion.outputs.semVer }}\"" -i kustomization.yaml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          path: deployment
          commit-message: "chore: update staging image to ${{ steps.gitversion.outputs.semVer }}"
          title: "Update staging image to ${{ steps.gitversion.outputs.semVer }}"
          body: |
            This PR updates the staging deployment to use the latest Docker image.
            
            Version: `${{ steps.gitversion.outputs.semVer }}`
            Full Version: `${{ steps.gitversion.outputs.informationalVersion }}`
            Image: `${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.gitversion.outputs.semVer }}`
            Commit: ${{ github.sha }}
          branch: update-staging-image
          base: main
          labels: staging,automated
          draft: false